{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "electionId",
          "type": "bytes32"
        }
      ],
      "name": "ElectionCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "addCandidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "addVoter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_state",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "_candidates",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_year",
          "type": "uint256"
        },
        {
          "internalType": "enum AadhaarVoting.ElectionType",
          "name": "_type",
          "type": "uint8"
        }
      ],
      "name": "createElection",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "elections",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "state",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "year",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isActive",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "generalElectionIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        }
      ],
      "name": "getAllVotes",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "getCandidateVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        }
      ],
      "name": "getElectionCandidates",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        }
      ],
      "name": "getElectionWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highestVotes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        }
      ],
      "name": "getElectionWinners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGeneralElectionDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "electionId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "candidates",
              "type": "address[]"
            }
          ],
          "internalType": "struct AadhaarVoting.ElectionDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGeneralElectionIds",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStateElectionDetails",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "electionId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "state",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "endTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "year",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            },
            {
              "internalType": "address[]",
              "name": "candidates",
              "type": "address[]"
            }
          ],
          "internalType": "struct AadhaarVoting.ElectionDetails[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStateElectionIds",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "isEligible",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stateElectionIds",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_voter",
          "type": "address"
        }
      ],
      "name": "userHasVoted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_electionId",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_candidate",
          "type": "address"
        }
      ],
      "name": "voteElection",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "voters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x95f61f2093cb3c87550309fa10e1dedadd4270f2bea60a92e855a1fd7d20d76f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2738027",
    "logsBloom": "0x
    "blockHash": "0x6e7f5c95394fc1ce7b49ab7dade6521106f4158f780441546955e520f67925d0",
    "transactionHash": "0x95f61f2093cb3c87550309fa10e1dedadd4270f2bea60a92e855a1fd7d20d76f",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2738027",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "685ca19949659f10a69de877bf7a6b53",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"electionId\",\"type\":\"bytes32\"}],\"name\":\"ElectionCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"addVoter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_state\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"_candidates\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_year\",\"type\":\"uint256\"},{\"internalType\":\"enum AadhaarVoting.ElectionType\",\"name\":\"_type\",\"type\":\"uint8\"}],\"name\":\"createElection\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"elections\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"generalElectionIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"}],\"name\":\"getAllVotes\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"getCandidateVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"}],\"name\":\"getElectionCandidates\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"}],\"name\":\"getElectionWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highestVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"}],\"name\":\"getElectionWinners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneralElectionDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"electionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"candidates\",\"type\":\"address[]\"}],\"internalType\":\"struct AadhaarVoting.ElectionDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGeneralElectionIds\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateElectionDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"electionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"state\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"year\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"address[]\",\"name\":\"candidates\",\"type\":\"address[]\"}],\"internalType\":\"struct AadhaarVoting.ElectionDetails[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateElectionIds\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"isEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stateElectionIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_voter\",\"type\":\"address\"}],\"name\":\"userHasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_electionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_candidate\",\"type\":\"address\"}],\"name\":\"voteElection\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AadhaarVoting.sol\":\"AadhaarVoting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AadhaarVoting.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ncontract AadhaarVoting {\\n    address public admin;\\n\\n    constructor() {\\n        admin = msg.sender;\\n    }\\n\\n    modifier onlyAdmin() {\\n        require(msg.sender == admin, \\\"Only admin can perform this\\\");\\n        _;\\n    }\\n\\n    enum ElectionType { General, State }\\n\\n    struct Election {\\n        string name;\\n        string state; // Empty for general election\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 year;\\n        bool isActive;\\n        address[] candidates;\\n        mapping(address => uint256) votes;\\n        mapping(address => bool) hasVoted;\\n        mapping(address => bool) isValidCandidate;\\n    }\\n\\n    // A helper struct without mappings for safe return\\n    struct ElectionDetails {\\n        bytes32 electionId;\\n        string name;\\n        string state;\\n        uint256 startTime;\\n        uint256 endTime;\\n        uint256 year;\\n        bool isActive;\\n        address[] candidates;\\n    }\\n\\n\\n    mapping(address => bool) public voters;\\n    mapping(bytes32 => Election) public elections;\\n\\n    bytes32[] public generalElectionIds;\\n    bytes32[] public stateElectionIds;\\n\\n    event ElectionCreated(bytes32 indexed electionId);\\n\\n    // === Voter Management ===\\n    function addVoter(address _voter) public {\\n        voters[_voter] = true;\\n    }\\n    // function addVoter(address _voter) public onlyAdmin {\\n    //     voters[_voter] = true;\\n    // }\\n\\n    function isEligible(address _voter) public view returns (bool) {\\n        return voters[_voter];\\n    }\\n\\n    // === Candidate Management ===\\n    function addCandidate(bytes32 _electionId, address _candidate) public onlyAdmin {\\n        Election storage election = elections[_electionId];\\n        \\n        require(election.isActive, \\\"Election not active\\\");\\n        require(!election.isValidCandidate[_candidate], \\\"Candidate already added\\\");\\n\\n        election.candidates.push(_candidate);\\n        // election.votes[_candidate] = 0;\\n        election.isValidCandidate[_candidate] = true;\\n    }\\n\\n\\n    // === Election ID Generator ===\\n    function getElectionId(\\n        string memory _name,\\n        ElectionType _type,\\n        string memory _state,\\n        uint256 _year\\n    ) internal view returns (bytes32) {\\n        return keccak256(abi.encodePacked(_name, _type, _state, _year, block.timestamp));\\n    }\\n\\n    // === Create Election ===\\n    function createElection(\\n        string memory _name,\\n        string memory _state, // Pass \\\"\\\" for general election\\n        address[] memory _candidates,\\n        uint256 _startTime,\\n        uint256 _endTime,\\n        uint256 _year,\\n        ElectionType _type\\n    ) public onlyAdmin returns (bytes32) {\\n        require(_startTime < _endTime, \\\"Invalid election time\\\");\\n\\n        bytes32 electionId = getElectionId(_name, _type, _state, _year);\\n\\n        Election storage election = elections[electionId];\\n        election.name = _name;\\n        election.state = _state;\\n        election.startTime = _startTime;\\n        election.endTime = _endTime;\\n        election.year = _year;\\n        election.isActive = true;\\n        \\n        for (uint i = 0; i < _candidates.length; i++) {\\n            address candidate = _candidates[i];\\n            election.candidates.push(candidate);\\n            election.isValidCandidate[candidate] = true;\\n        }\\n\\n\\n        if (_type == ElectionType.General) {\\n            generalElectionIds.push(electionId);\\n        } else {\\n            stateElectionIds.push(electionId);\\n        }\\n\\n        emit ElectionCreated(electionId);\\n\\n        return electionId;\\n    }\\n\\n    // === Vote ===\\n    function voteElection(bytes32 _electionId, address _candidate) public {\\n        require(voters[msg.sender], \\\"Not eligible\\\");\\n\\n        Election storage election = elections[_electionId];\\n        require(election.isActive, \\\"Election not active\\\");\\n        require(block.timestamp >= election.startTime && block.timestamp <= election.endTime, \\\"Election not running\\\");\\n\\n        // Cache storage reference\\n        mapping(address => bool) storage hasVoted = election.hasVoted;\\n        mapping(address => bool) storage isValidCandidate = election.isValidCandidate;\\n\\n        require(!hasVoted[msg.sender], \\\"Already voted\\\");\\n        require(isValidCandidate[_candidate], \\\"Invalid candidate\\\");\\n\\n        hasVoted[msg.sender] = true;\\n        election.votes[_candidate]++;\\n\\n    }\\n\\n    // Votes of Candidate in particular Election\\n    function getAllVotes(bytes32 _electionId) public view returns (address[] memory, uint256[] memory) {\\n        Election storage election = elections[_electionId];\\n        uint256 candidatesCount = election.candidates.length;\\n        \\n        address[] memory candidateList = new address[](candidatesCount);\\n        uint256[] memory voteCounts = new uint256[](candidatesCount);\\n        \\n        for (uint256 i = 0; i < candidatesCount; i++) {\\n            candidateList[i] = election.candidates[i];\\n            voteCounts[i] = election.votes[election.candidates[i]];\\n        }\\n        \\n        return (candidateList, voteCounts);\\n    }\\n\\n\\n    // === Election Winner ===\\n    function getElectionWinner(bytes32 _electionId) public view returns (address winner, uint256 highestVotes) {\\n        Election storage election = elections[_electionId];\\n        require(election.candidates.length > 0, \\\"No candidates found\\\");\\n\\n        uint256 maxVotes = 0;\\n        address topCandidate;\\n\\n        for (uint256 i = 0; i < election.candidates.length; i++) {\\n            address candidate = election.candidates[i];\\n            uint256 votes = election.votes[candidate];\\n\\n            if (votes > maxVotes) {\\n                maxVotes = votes;\\n                topCandidate = candidate;\\n            }\\n        }\\n\\n        return (topCandidate, maxVotes);\\n    }\\n\\n    // Election Winner (if tie is there)\\n    function getElectionWinners(bytes32 _electionId) public view returns (address[] memory, uint256) {\\n        Election storage election = elections[_electionId];\\n        uint256 candidatesLength = election.candidates.length;\\n\\n        require(candidatesLength > 0, \\\"No candidates found\\\");\\n\\n        address[] memory tempWinners = new address[](candidatesLength);\\n        uint256 maxVotes = 0;\\n        uint256 winnerCount = 0;\\n\\n        for (uint256 i = 0; i < candidatesLength; i++) {\\n            address candidate = election.candidates[i];\\n            uint256 votes = election.votes[candidate];\\n\\n            if (votes > maxVotes) {\\n                maxVotes = votes;\\n                winnerCount = 1;\\n                tempWinners[0] = candidate;\\n            } else if (votes == maxVotes) {\\n                tempWinners[winnerCount] = candidate;\\n                winnerCount++;\\n            }\\n        }\\n\\n        address[] memory winners = new address[](winnerCount);\\n        for (uint256 i = 0; i < winnerCount; i++) {\\n            winners[i] = tempWinners[i];\\n        }\\n\\n        return (winners, maxVotes);\\n    }\\n\\n    // Get Election Details\\n    function _getElectionDetails(bytes32[] storage electionIds) internal view returns (ElectionDetails[] memory) {\\n        uint256 count = electionIds.length;\\n        ElectionDetails[] memory details = new ElectionDetails[](count);\\n\\n        for (uint256 i = 0; i < count; i++) {\\n            bytes32 electionId = electionIds[i];\\n            Election storage e = elections[electionId];\\n\\n            details[i] = ElectionDetails({\\n                electionId: electionId,\\n                name: e.name,\\n                state: e.state,\\n                startTime: e.startTime,\\n                endTime: e.endTime,\\n                year: e.year,\\n                isActive: e.isActive,\\n                candidates: e.candidates\\n            });\\n        }\\n\\n        return details;\\n    }\\n\\n    function getGeneralElectionDetails() public view returns (ElectionDetails[] memory) {\\n        return _getElectionDetails(generalElectionIds);\\n    }\\n\\n    function getStateElectionDetails() public view returns (ElectionDetails[] memory) {\\n        return _getElectionDetails(stateElectionIds);\\n    }\\n\\n\\n\\n\\n    // === Getters ===\\n    function getCandidateVotes(bytes32 _electionId, address _candidate) public view returns (uint256) {\\n        return elections[_electionId].votes[_candidate];\\n    }\\n\\n    function userHasVoted(bytes32 _electionId, address _voter) public view returns (bool) {\\n        return elections[_electionId].hasVoted[_voter];\\n    }\\n\\n    function getElectionCandidates(bytes32 _electionId) public view returns (address[] memory) {\\n        return elections[_electionId].candidates;\\n    }\\n\\n    function getGeneralElectionIds() public view returns (bytes32[] memory) {\\n        return generalElectionIds;\\n    }\\n\\n    function getStateElectionIds() public view returns (bytes32[] memory) {\\n        return stateElectionIds;\\n    }\\n}\\n\",\"keccak256\":\"0xa9decc32f9aac1eb2716451c4ffceedde5637ae3743984a2eadcfb9a4ff13389\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806388d2f2a2116100ad578063c7d8059511610071578063c7d80595146103ad578063c9c6eea7146103dd578063d2f3874a146103f9578063f4ab9adf14610429578063f851a440146104455761012c565b806388d2f2a2146102e05780639e22156714610310578063a3ec138d1461032e578063a75b0c4a1461035e578063b1f917691461037c5761012c565b80634d583688116100f45780634d5836881461022857806352987a0f14610246578063542377ba1461026457806366e305fd146102945780637c5d9165146102c45761012c565b80630165b82a1461013157806305ab39b71461016157806317ffd7aa1461019657806324af33ce146101c657806346ab82a6146101f7575b600080fd5b61014b60048036038101906101469190611bd3565b610463565b6040516101589190611c19565b60405180910390f35b61017b60048036038101906101769190611c60565b610487565b60405161018d96959493929190611d47565b60405180910390f35b6101b060048036038101906101ab9190611e14565b6105e0565b6040516101bd9190611e54565b60405180910390f35b6101e060048036038101906101db9190611c60565b61063e565b6040516101ee929190611f2d565b60405180910390f35b610211600480360381019061020c9190611c60565b610950565b60405161021f929190611f6c565b60405180910390f35b610230610a8a565b60405161023d9190612053565b60405180910390f35b61024e610ae2565b60405161025b9190612053565b60405180910390f35b61027e60048036038101906102799190611c60565b610b3a565b60405161028b9190612075565b60405180910390f35b6102ae60048036038101906102a99190612097565b610bde565b6040516102bb91906120c4565b60405180910390f35b6102de60048036038101906102d99190611e14565b610c34565b005b6102fa60048036038101906102f59190612301565b610e7d565b6040516103079190611c19565b60405180910390f35b610318611193565b604051610325919061264e565b60405180910390f35b61034860048036038101906103439190612097565b6111a4565b60405161035591906120c4565b60405180910390f35b6103666111c4565b604051610373919061264e565b60405180910390f35b61039660048036038101906103919190611c60565b6111d5565b6040516103a492919061271f565b60405180910390f35b6103c760048036038101906103c29190611e14565b6113f2565b6040516103d491906120c4565b60405180910390f35b6103f760048036038101906103f29190611e14565b61145d565b005b610413600480360381019061040e9190611bd3565b611784565b6040516104209190611c19565b60405180910390f35b610443600480360381019061043e9190612097565b6117a8565b005b61044d611802565b60405161045a9190612756565b60405180910390f35b6003818154811061047357600080fd5b906000526020600020016000915090505481565b60026020528060005260406000206000915090508060000180546104aa906127a0565b80601f01602080910402602001604051908101604052809291908181526020018280546104d6906127a0565b80156105235780601f106104f857610100808354040283529160200191610523565b820191906000526020600020905b81548152906001019060200180831161050657829003601f168201915b505050505090806001018054610538906127a0565b80601f0160208091040260200160405190810160405280929190818152602001828054610564906127a0565b80156105b15780601f10610586576101008083540402835291602001916105b1565b820191906000526020600020905b81548152906001019060200180831161059457829003601f168201915b5050505050908060020154908060030154908060040154908060050160009054906101000a900460ff16905086565b60006002600084815260200190815260200160002060070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6060600080600260008581526020019081526020016000209050600081600601805490509050600081116106a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069e9061281d565b60405180910390fd5b60008167ffffffffffffffff8111156106c3576106c26120e9565b5b6040519080825280602002602001820160405280156106f15781602001602082028036833780820191505090505b50905060008060005b8481101561086a57600086600601828154811061071a5761071961283d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008760070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050848111156107f0578094506001935081866000815181106107b1576107b061283d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050610855565b848103610854578186858151811061080b5761080a61283d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083806108509061289b565b9450505b5b505080806108629061289b565b9150506106fa565b5060008167ffffffffffffffff811115610887576108866120e9565b5b6040519080825280602002602001820160405280156108b55781602001602082028036833780820191505090505b50905060005b8281101561093e578481815181106108d6576108d561283d565b5b60200260200101518282815181106108f1576108f061283d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505080806109369061289b565b9150506108bb565b50808397509750505050505050915091565b600080600060026000858152602001908152602001600020905060008160060180549050116109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab9061281d565b60405180910390fd5b60008080600090505b8360060180549050811015610a7b5760008460060182815481106109e4576109e361283d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008560070160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905084811115610a66578094508193505b50508080610a739061289b565b9150506109bd565b50808294509450505050915091565b60606004805480602002602001604051908101604052809291908181526020018280548015610ad857602002820191906000526020600020905b815481526020019060010190808311610ac4575b5050505050905090565b60606003805480602002602001604051908101604052809291908181526020018280548015610b3057602002820191906000526020600020905b815481526020019060010190808311610b1c575b5050505050905090565b606060026000838152602001908152602001600020600601805480602002602001604051908101604052809291908181526020018280548015610bd257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610b88575b50505050509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb99061292f565b60405180910390fd5b60006002600084815260200190815260200160002090508060050160009054906101000a900460ff16610d2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d219061299b565b60405180910390fd5b8060090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610db9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db090612a07565b60405180910390fd5b80600601829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160090160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f0e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f059061292f565b60405180910390fd5b838510610f50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4790612a73565b60405180910390fd5b6000610f5e89848a87611826565b9050600060026000838152602001908152602001600020905089816000019081610f889190612c3f565b5088816001019081610f9a9190612c3f565b5086816002018190555085816003018190555084816004018190555060018160050160006101000a81548160ff02191690831515021790555060005b88518110156110d1576000898281518110610ff457610ff361283d565b5b6020026020010151905082600601819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018360090160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505080806110c99061289b565b915050610fd6565b50600060018111156110e6576110e5612d11565b5b8460018111156110f9576110f8612d11565b5b0361112c576003829080600181540180825580915050600190039060005260206000200160009091909190915055611156565b60048290806001815401808255809150506001900390600052602060002001600090919091909150555b817fe842e8696f10c8e297c8e47fc66f8288f5ba919afc772e4042c2e78a305ab07660405160405180910390a28192505050979650505050505050565b606061119f6004611861565b905090565b60016020528060005260406000206000915054906101000a900460ff1681565b60606111d06003611861565b905090565b606080600060026000858152602001908152602001600020905060008160060180549050905060008167ffffffffffffffff811115611217576112166120e9565b5b6040519080825280602002602001820160405280156112455781602001602082028036833780820191505090505b50905060008267ffffffffffffffff811115611264576112636120e9565b5b6040519080825280602002602001820160405280156112925781602001602082028036833780820191505090505b50905060005b838110156113e2578460060181815481106112b6576112b561283d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168382815181106112f4576112f361283d565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084600701600086600601838154811061134a5761134961283d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548282815181106113c3576113c261283d565b5b60200260200101818152505080806113da9061289b565b915050611298565b5081819550955050505050915091565b60006002600084815260200190815260200160002060080160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166114e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e090612d8c565b60405180910390fd5b60006002600084815260200190815260200160002090508060050160009054906101000a900460ff16611551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115489061299b565b60405180910390fd5b80600201544210158015611569575080600301544211155b6115a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159f90612df8565b60405180910390fd5b600081600801905060008260090190508160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615611644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163b90612e64565b60405180910390fd5b8060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166116cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116c690612ed0565b60405180910390fd5b60018260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508260070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008154809291906117789061289b565b91905055505050505050565b6004818154811061179457600080fd5b906000526020600020016000915090505481565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008484848442604051602001611841959493929190612fbc565b604051602081830303815290604052805190602001209050949350505050565b606060008280549050905060008167ffffffffffffffff811115611888576118876120e9565b5b6040519080825280602002602001820160405280156118c157816020015b6118ae611b3f565b8152602001906001900390816118a65790505b50905060005b82811015611b345760008582815481106118e4576118e361283d565b5b906000526020600020015490506000600260008381526020019081526020016000209050604051806101000160405280838152602001826000018054611929906127a0565b80601f0160208091040260200160405190810160405280929190818152602001828054611955906127a0565b80156119a25780601f10611977576101008083540402835291602001916119a2565b820191906000526020600020905b81548152906001019060200180831161198557829003601f168201915b505050505081526020018260010180546119bb906127a0565b80601f01602080910402602001604051908101604052809291908181526020018280546119e7906127a0565b8015611a345780601f10611a0957610100808354040283529160200191611a34565b820191906000526020600020905b815481529060010190602001808311611a1757829003601f168201915b505050505081526020018260020154815260200182600301548152602001826004015481526020018260050160009054906101000a900460ff161515815260200182600601805480602002602001604051908101604052809291908181526020018280548015611af957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611aaf575b5050505050815250848481518110611b1457611b1361283d565b5b602002602001018190525050508080611b2c9061289b565b9150506118c7565b508092505050919050565b604051806101000160405280600080191681526020016060815260200160608152602001600081526020016000815260200160008152602001600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b611bb081611b9d565b8114611bbb57600080fd5b50565b600081359050611bcd81611ba7565b92915050565b600060208284031215611be957611be8611b93565b5b6000611bf784828501611bbe565b91505092915050565b6000819050919050565b611c1381611c00565b82525050565b6000602082019050611c2e6000830184611c0a565b92915050565b611c3d81611c00565b8114611c4857600080fd5b50565b600081359050611c5a81611c34565b92915050565b600060208284031215611c7657611c75611b93565b5b6000611c8484828501611c4b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611cc7578082015181840152602081019050611cac565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cef82611c8d565b611cf98185611c98565b9350611d09818560208601611ca9565b611d1281611cd3565b840191505092915050565b611d2681611b9d565b82525050565b60008115159050919050565b611d4181611d2c565b82525050565b600060c0820190508181036000830152611d618189611ce4565b90508181036020830152611d758188611ce4565b9050611d846040830187611d1d565b611d916060830186611d1d565b611d9e6080830185611d1d565b611dab60a0830184611d38565b979650505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611de182611db6565b9050919050565b611df181611dd6565b8114611dfc57600080fd5b50565b600081359050611e0e81611de8565b92915050565b60008060408385031215611e2b57611e2a611b93565b5b6000611e3985828601611c4b565b9250506020611e4a85828601611dff565b9150509250929050565b6000602082019050611e696000830184611d1d565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ea481611dd6565b82525050565b6000611eb68383611e9b565b60208301905092915050565b6000602082019050919050565b6000611eda82611e6f565b611ee48185611e7a565b9350611eef83611e8b565b8060005b83811015611f20578151611f078882611eaa565b9750611f1283611ec2565b925050600181019050611ef3565b5085935050505092915050565b60006040820190508181036000830152611f478185611ecf565b9050611f566020830184611d1d565b9392505050565b611f6681611dd6565b82525050565b6000604082019050611f816000830185611f5d565b611f8e6020830184611d1d565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611fca81611c00565b82525050565b6000611fdc8383611fc1565b60208301905092915050565b6000602082019050919050565b600061200082611f95565b61200a8185611fa0565b935061201583611fb1565b8060005b8381101561204657815161202d8882611fd0565b975061203883611fe8565b925050600181019050612019565b5085935050505092915050565b6000602082019050818103600083015261206d8184611ff5565b905092915050565b6000602082019050818103600083015261208f8184611ecf565b905092915050565b6000602082840312156120ad576120ac611b93565b5b60006120bb84828501611dff565b91505092915050565b60006020820190506120d96000830184611d38565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61212182611cd3565b810181811067ffffffffffffffff821117156121405761213f6120e9565b5b80604052505050565b6000612153611b89565b905061215f8282612118565b919050565b600067ffffffffffffffff82111561217f5761217e6120e9565b5b61218882611cd3565b9050602081019050919050565b82818337600083830152505050565b60006121b76121b284612164565b612149565b9050828152602081018484840111156121d3576121d26120e4565b5b6121de848285612195565b509392505050565b600082601f8301126121fb576121fa6120df565b5b813561220b8482602086016121a4565b91505092915050565b600067ffffffffffffffff82111561222f5761222e6120e9565b5b602082029050602081019050919050565b600080fd5b600061225861225384612214565b612149565b9050808382526020820190506020840283018581111561227b5761227a612240565b5b835b818110156122a457806122908882611dff565b84526020840193505060208101905061227d565b5050509392505050565b600082601f8301126122c3576122c26120df565b5b81356122d3848260208601612245565b91505092915050565b600281106122e957600080fd5b50565b6000813590506122fb816122dc565b92915050565b600080600080600080600060e0888a0312156123205761231f611b93565b5b600088013567ffffffffffffffff81111561233e5761233d611b98565b5b61234a8a828b016121e6565b975050602088013567ffffffffffffffff81111561236b5761236a611b98565b5b6123778a828b016121e6565b965050604088013567ffffffffffffffff81111561239857612397611b98565b5b6123a48a828b016122ae565b95505060606123b58a828b01611bbe565b94505060806123c68a828b01611bbe565b93505060a06123d78a828b01611bbe565b92505060c06123e88a828b016122ec565b91505092959891949750929550565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061243f82611c8d565b6124498185612423565b9350612459818560208601611ca9565b61246281611cd3565b840191505092915050565b61247681611b9d565b82525050565b61248581611d2c565b82525050565b600082825260208201905092915050565b60006124a782611e6f565b6124b1818561248b565b93506124bc83611e8b565b8060005b838110156124ed5781516124d48882611eaa565b97506124df83611ec2565b9250506001810190506124c0565b5085935050505092915050565b6000610100830160008301516125136000860182611fc1565b506020830151848203602086015261252b8282612434565b915050604083015184820360408601526125458282612434565b915050606083015161255a606086018261246d565b50608083015161256d608086018261246d565b5060a083015161258060a086018261246d565b5060c083015161259360c086018261247c565b5060e083015184820360e08601526125ab828261249c565b9150508091505092915050565b60006125c483836124fa565b905092915050565b6000602082019050919050565b60006125e4826123f7565b6125ee8185612402565b93508360208202850161260085612413565b8060005b8581101561263c578484038952815161261d85826125b8565b9450612628836125cc565b925060208a01995050600181019050612604565b50829750879550505050505092915050565b6000602082019050818103600083015261266881846125d9565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006126a8838361246d565b60208301905092915050565b6000602082019050919050565b60006126cc82612670565b6126d6818561267b565b93506126e18361268c565b8060005b838110156127125781516126f9888261269c565b9750612704836126b4565b9250506001810190506126e5565b5085935050505092915050565b600060408201905081810360008301526127398185611ecf565b9050818103602083015261274d81846126c1565b90509392505050565b600060208201905061276b6000830184611f5d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806127b857607f821691505b6020821081036127cb576127ca612771565b5b50919050565b7f4e6f2063616e6469646174657320666f756e6400000000000000000000000000600082015250565b6000612807601383611c98565b9150612812826127d1565b602082019050919050565b60006020820190508181036000830152612836816127fa565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006128a682611b9d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036128d8576128d761286c565b5b600182019050919050565b7f4f6e6c792061646d696e2063616e20706572666f726d20746869730000000000600082015250565b6000612919601b83611c98565b9150612924826128e3565b602082019050919050565b600060208201905081810360008301526129488161290c565b9050919050565b7f456c656374696f6e206e6f742061637469766500000000000000000000000000600082015250565b6000612985601383611c98565b91506129908261294f565b602082019050919050565b600060208201905081810360008301526129b481612978565b9050919050565b7f43616e64696461746520616c7265616479206164646564000000000000000000600082015250565b60006129f1601783611c98565b91506129fc826129bb565b602082019050919050565b60006020820190508181036000830152612a20816129e4565b9050919050565b7f496e76616c696420656c656374696f6e2074696d650000000000000000000000600082015250565b6000612a5d601583611c98565b9150612a6882612a27565b602082019050919050565b60006020820190508181036000830152612a8c81612a50565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612af57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612ab8565b612aff8683612ab8565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612b3c612b37612b3284611b9d565b612b17565b611b9d565b9050919050565b6000819050919050565b612b5683612b21565b612b6a612b6282612b43565b848454612ac5565b825550505050565b600090565b612b7f612b72565b612b8a818484612b4d565b505050565b5b81811015612bae57612ba3600082612b77565b600181019050612b90565b5050565b601f821115612bf357612bc481612a93565b612bcd84612aa8565b81016020851015612bdc578190505b612bf0612be885612aa8565b830182612b8f565b50505b505050565b600082821c905092915050565b6000612c1660001984600802612bf8565b1980831691505092915050565b6000612c2f8383612c05565b9150826002028217905092915050565b612c4882611c8d565b67ffffffffffffffff811115612c6157612c606120e9565b5b612c6b82546127a0565b612c76828285612bb2565b600060209050601f831160018114612ca95760008415612c97578287015190505b612ca18582612c23565b865550612d09565b601f198416612cb786612a93565b60005b82811015612cdf57848901518255600182019150602085019450602081019050612cba565b86831015612cfc5784890151612cf8601f891682612c05565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e6f7420656c696769626c650000000000000000000000000000000000000000600082015250565b6000612d76600c83611c98565b9150612d8182612d40565b602082019050919050565b60006020820190508181036000830152612da581612d69565b9050919050565b7f456c656374696f6e206e6f742072756e6e696e67000000000000000000000000600082015250565b6000612de2601483611c98565b9150612ded82612dac565b602082019050919050565b60006020820190508181036000830152612e1181612dd5565b9050919050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000612e4e600d83611c98565b9150612e5982612e18565b602082019050919050565b60006020820190508181036000830152612e7d81612e41565b9050919050565b7f496e76616c69642063616e646964617465000000000000000000000000000000600082015250565b6000612eba601183611c98565b9150612ec582612e84565b602082019050919050565b60006020820190508181036000830152612ee981612ead565b9050919050565b600081905092915050565b6000612f0682611c8d565b612f108185612ef0565b9350612f20818560208601611ca9565b80840191505092915050565b60028110612f3d57612f3c612d11565b5b50565b6000819050612f4e82612f2c565b919050565b6000612f5e82612f40565b9050919050565b60008160f81b9050919050565b6000612f7d82612f65565b9050919050565b612f95612f9082612f53565b612f72565b82525050565b6000819050919050565b612fb6612fb182611b9d565b612f9b565b82525050565b6000612fc88288612efb565b9150612fd48287612f84565b600182019150612fe48286612efb565b9150612ff08285612fa5565b6020820191506130008284612fa5565b602082019150819050969550505050505056fea26469706673582212202ef2549af4669174acdd96d0eded012367a79f4d00e90ecbfd73184d06b2d50a64736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3,
        "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 77,
        "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
        "label": "voters",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 82,
        "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
        "label": "elections",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(Election)55_storage)"
      },
      {
        "astId": 85,
        "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
        "label": "generalElectionIds",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 88,
        "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
        "label": "stateElectionIds",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_struct(Election)55_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct AadhaarVoting.Election)",
        "numberOfBytes": "32",
        "value": "t_struct(Election)55_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Election)55_storage": {
        "encoding": "inplace",
        "label": "struct AadhaarVoting.Election",
        "members": [
          {
            "astId": 29,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 31,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "state",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 33,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "startTime",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 35,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "endTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 37,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "year",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 39,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "isActive",
            "offset": 0,
            "slot": "5",
            "type": "t_bool"
          },
          {
            "astId": 42,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "candidates",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 46,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "votes",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 50,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "hasVoted",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 54,
            "contract": "contracts/AadhaarVoting.sol:AadhaarVoting",
            "label": "isValidCandidate",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}